{"version":3,"file":"EnvironmentMapGenerator.js","sourceRoot":"","sources":["../../src/three-components/EnvironmentMapGenerator.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BackSide, CubeCamera, EventDispatcher, Mesh, MeshBasicMaterial, PlaneBufferGeometry, PointLight, Scene, Vector3} from 'three';\n\nimport Sky from '../third_party/three/Sky.js';\n\nimport {assertContext} from './WebGLUtils.js';\n\nconst SKYSPHERE_SIZE = 10000;\n\nexport default class EnvironmentMapGenerator extends EventDispatcher {\n  constructor(renderer) {\n    super();\n    this.renderer = renderer;\n    this.scene = new Scene();\n\n    const gl = assertContext(this.renderer.getContext());\n\n    this.maxMapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\n    // Values generated from sky demo\n    // @see https://threejs.org/examples/webgl_shaders_sky.html\n    const distance = 400;\n    const theta = Math.PI * (0.45 - 0.5);\n    const phi = 2 * Math.PI * (.005 - 0.5);\n    const sunPosition = new Vector3().set(\n        distance * Math.cos(phi),\n        distance * Math.sin(phi) * Math.sin(theta),\n        distance * Math.sin(phi) * Math.cos(theta));\n\n    this.sky = new Sky();\n    this.sky.scale.multiplyScalar(SKYSPHERE_SIZE);\n    this.sky.material.uniforms.luminance.value = 0.1;\n    this.sky.material.uniforms.turbidity.value = 1;\n    this.sky.material.uniforms.rayleigh.value = 0.2;\n    this.sky.material.uniforms.mieCoefficient.value = 0.056;\n    this.sky.material.uniforms.mieDirectionalG.value = 0.8;\n    this.sky.material.uniforms.sunPosition.value = sunPosition;\n    this.scene.add(this.sky);\n\n    this.camera = new CubeCamera(1, SKYSPHERE_SIZE * 3, this.maxMapSize);\n  }\n\n  /**\n   * Generate an environment map for a room.\n   *\n   * @param {number} mapSize\n   */\n  generate(mapSize) {\n    mapSize = Math.min(mapSize, this.maxMapSize);\n    this.camera.renderTarget.setSize(mapSize, mapSize);\n    this.camera.clear(this.renderer);\n    this.camera.update(this.renderer, this.scene);\n\n    return this.camera.renderTarget.texture;\n  }\n\n  dispose() {\n    this.camera.renderTarget.dispose();\n  }\n}\n"]}