{"version":3,"file":"auto-rotate.js","sourceRoot":"","sources":["../../src/features/auto-rotate.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH,OAAO,EAAC,YAAY,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,yBAAyB,CAAC;AAEpE,uCAAuC;AACvC,qBAAqB;AACrB,MAAM,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AAEpC,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,kBAAkB,EAAE,EAAE;IACpD,OAAO,KAAM,SAAQ,kBAAkB;QACrC,MAAM,KAAK,UAAU;YACnB,yBACK,KAAK,CAAC,UAAU,IACnB,UAAU,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,EAAC,IACrD;QACJ,CAAC;QAED,MAAM,CAAC,iBAAiB;YACtB,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAEhC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;gBACxC,OAAO;aACR;YAED,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;aACtB;QACH,CAAC;QAED,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK;YACjB,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAE1B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,cAAc,GAAG,KAAK,GAAG,KAAK,CAAC;gBAChE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;aACtB;QACH,CAAC;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {$needsRender, $scene, $tick} from '../model-viewer-base.js';\n\n// How much the model should rotate per\n// second in radians.\nconst ROTATION_SPEED = Math.PI / 32;\n\nexport const AutoRotateMixin = (ModelViewerElement) => {\n  return class extends ModelViewerElement {\n    static get properties() {\n      return {\n        ...super.properties,\n        autoRotate: {type: Boolean, attribute: 'auto-rotate'}\n      };\n    }\n\n    update(changedProperties) {\n      super.update(changedProperties);\n\n      if (!changedProperties.has('autoRotate')) {\n        return;\n      }\n\n      if (this.autoRotate) {\n        this[$scene].pivot.rotation.set(0, 0, 0);\n        this[$needsRender]();\n      }\n    }\n\n    [$tick](time, delta) {\n      super[$tick](time, delta);\n\n      if (this.autoRotate) {\n        this[$scene].pivot.rotation.y += ROTATION_SPEED * delta * 0.001;\n        this[$needsRender]();\n      }\n    }\n  };\n};\n"]}