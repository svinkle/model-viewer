{"version":3,"file":"loading.js","sourceRoot":"","sources":["../../src/features/loading.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {$ariaLabel, $canvas, $updateSource} from '../model-viewer-base.js';\nimport {CachingGLTFLoader} from '../three-components/CachingGLTFLoader.js';\nimport {debounce, deserializeUrl} from '../utils.js';\nimport {LoadingStatusAnnouncer} from './loading/status-announcer.js';\n\nexport const $posterElement = Symbol('posterElement');\nconst $applyPreloadStrategy = Symbol('applyPreloadStrategy');\n\nconst $dismissPoster = Symbol('dismissPoster');\nconst $showPoster = Symbol('showPoster');\nconst $hidePoster = Symbol('hidePoster');\nconst $posterHidden = Symbol('posterHidden');\nconst $userDismissedPoster = Symbol('userDismissedPoster');\nconst $shouldDismissPoster = Symbol('shouldDismissPoster');\nconst $shouldAttemptPreload = Symbol('shouldAttemptPreload');\nconst $ensurePreloaded = Symbol('ensurePreloaded');\nconst $preloadAnnounced = Symbol('preloadAnnounced');\nconst $ariaLabelCallToAction = Symbol('ariaLabelCallToAction');\n\nconst $clickHandler = Symbol('clickHandler');\nconst $keydownHandler = Symbol('keydownHandler');\nconst $onClick = Symbol('onClick');\nconst $onKeydown = Symbol('onKeydown');\n\nconst loader = new CachingGLTFLoader();\nconst loadingStatusAnnouncer = new LoadingStatusAnnouncer();\n\nexport const POSTER_TRANSITION_TIME = 300;\nconst SPACE_KEY = 32;\nconst ENTER_KEY = 13;\n\n\nexport const LoadingMixin = (ModelViewerElement) => {\n  return class extends ModelViewerElement {\n    static get properties() {\n      return {\n        ...super.properties,\n        poster: {type: deserializeUrl},\n        preload: {type: Boolean},\n        revealWhenLoaded: {type: Boolean, attribute: 'reveal-when-loaded'}\n      };\n    }\n\n    get loaded() {\n      return super.loaded ||\n          (this.src && CachingGLTFLoader.hasFinishedLoading(this.src));\n    }\n\n    constructor() {\n      super();\n\n      this[$posterHidden] = true;\n      this[$preloadAnnounced] = false;\n\n      // Used to determine whether or not to display a poster image or\n      // to load the model if not preloaded.\n      this[$userDismissedPoster] = false;\n\n      // TODO: Add this to the shadow root as part of this mixin's\n      // implementation:\n      this[$posterElement] = this.shadowRoot.querySelector('.poster');\n\n      this[$ariaLabelCallToAction] =\n          this[$posterElement].getAttribute('aria-label');\n\n      this[$clickHandler] = () => this[$onClick]();\n      this[$keydownHandler] = () => this[$onKeydown]();\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n\n      // Fired when a user first clicks the model element. Used to\n      // change the visibility of a poster image, or start loading\n      // a model.\n      this[$posterElement].addEventListener('click', () => this[$onClick]());\n      this[$posterElement].addEventListener(\n          'keydown', (event) => this[$onKeydown](event));\n\n      loadingStatusAnnouncer.registerInstance(this);\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      this[$posterElement].removeEventListener('click', () => this[$onClick]());\n      this[$posterElement].removeEventListener(\n          'keydown', (event) => this[$onKeydown](event));\n\n      loadingStatusAnnouncer.unregisterInstance(this);\n    }\n\n    dismissPoster() {\n      this[$userDismissedPoster] = true;\n      this.requestUpdate();\n    }\n\n    showPoster() {\n      this[$userDismissedPoster] = false;\n      this.requestUpdate();\n    }\n\n    [$hidePoster]() {\n      const posterElement = this[$posterElement];\n      const posterOpacity = self.getComputedStyle(posterElement).opacity;\n      const onPosterHidden = () => {\n        requestAnimationFrame(() => {\n          this.dispatchEvent(\n              new CustomEvent('poster-visibility', {detail: {visible: false}}));\n          this[$canvas].focus();\n        });\n      };\n\n      this[$posterHidden] = true;\n\n      if (posterOpacity > 0) {\n        // NOTE(cdata): The canvas cannot receive focus until the poster has\n        // been completely hidden:\n        posterElement.addEventListener(\n            'transitionend', onPosterHidden, {once: true});\n      } else {\n        // NOTE(cdata): Depending on timing, the opacity may already be 0, in\n        // which case we will never receive a transitionend event. So, just\n        // focus on the next animation frame:\n        onPosterHidden();\n        // requestAnimationFrame(onPosterHidden);\n      }\n\n      posterElement.classList.remove('show');\n      posterElement.setAttribute('aria-hidden', 'true');\n      posterElement.removeAttribute('tabindex');\n    }\n\n    [$showPoster]() {\n      const posterElement = this[$posterElement];\n      posterElement.classList.add('show');\n      posterElement.setAttribute('aria-hidden', 'false');\n      posterElement.tabIndex = 1;\n\n      this[$posterHidden] = false;\n\n      this.dispatchEvent(\n          new CustomEvent('poster-visibility', {detail: {visible: true}}));\n    }\n\n    [$onClick]() {\n      this.dismissPoster();\n    }\n\n    [$onKeydown](event) {\n      switch (event.keyCode) {\n        // NOTE(cdata): Links and buttons can typically be activated with both\n        // spacebar and enter to produce a synthetic click action\n        case SPACE_KEY:\n        case ENTER_KEY:\n          this.dismissPoster();\n          break;\n        default:\n          break;\n      }\n    }\n\n    get[$shouldDismissPoster]() {\n      return !this.poster ||\n          (CachingGLTFLoader.hasFinishedLoading(this.src) &&\n           (this.revealWhenLoaded || this[$userDismissedPoster]));\n    }\n\n    get[$shouldAttemptPreload]() {\n      return (this[$userDismissedPoster] || this.preload) && this.src &&\n          !this[$preloadAnnounced];\n    }\n\n    updated(changedProperties) {\n      super.updated(changedProperties);\n\n      const posterElement = this[$posterElement];\n\n      if (changedProperties.has('alt')) {\n        posterElement.setAttribute(\n            'aria-label',\n            `${this[$ariaLabel]}. ${this[$ariaLabelCallToAction]}`);\n      }\n\n      if (changedProperties.has('poster') && this.poster) {\n        posterElement.style.backgroundImage = `url(\"${this.poster}\")`;\n      }\n\n      if (changedProperties.has('src')) {\n        this[$preloadAnnounced] = false;\n      }\n\n      this[$ensurePreloaded]();\n\n      if (this[$shouldDismissPoster]) {\n        if (!this[$posterHidden]) {\n          this[$updateSource]();\n          this[$hidePoster]();\n        }\n      } else {\n        this[$showPoster]();\n      }\n    }\n\n    async[$ensurePreloaded]() {\n      const preloaded = CachingGLTFLoader.hasFinishedLoading(this.src);\n\n      if (this[$shouldAttemptPreload]) {\n        const detail = {url: this.src};\n\n        this[$preloadAnnounced] = true;\n\n        if (preloaded) {\n          this.dispatchEvent(new CustomEvent('preload', {detail}));\n        } else {\n          try {\n            await loader.preload(this.src);\n\n            this.dispatchEvent(new CustomEvent('preload', {detail}));\n            this.requestUpdate();\n          } catch (error) {\n            this.dispatchEvent(new CustomEvent(\n                'error', {detail: {type: 'preload', sourceError: error}}));\n          }\n        }\n      }\n    }\n\n    async[$updateSource]() {\n      if (this[$shouldDismissPoster]) {\n        await super[$updateSource]();\n      }\n    }\n  };\n}\n"]}