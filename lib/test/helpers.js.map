{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/test/helpers.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const elementFromLocalPoint = (document, x, y) => {\n  const host =\n      (document === window.document) ? window.document.body : document.host;\n  const actualDocument = window.ShadyCSS ? window.document : document;\n  const boundingRect = host.getBoundingClientRect();\n\n  return actualDocument.elementFromPoint(\n      boundingRect.left + x, boundingRect.top + y);\n};\n\nexport const pickShadowDescendant = (element, x = 0, y = 0) => {\n  return elementFromLocalPoint(element.shadowRoot, x, y);\n};\n\nexport const timePasses = (ms = 0) =>\n    new Promise(resolve => setTimeout(resolve, ms));\n\nexport const until =\n    async (predicate) => {\n  while (!predicate()) {\n    await timePasses();\n  }\n}\n\nexport const rafPasses = () =>\n    new Promise(resolve => requestAnimationFrame(resolve));\n\n/**\n * Takes a texture and an object and returns a boolean indicating\n * if whether or not the texture's userData matches the fields\n * defined on the `meta` object.\n *\n * @param {THREE.Texture}\n * @param {Object}\n * @return {boolean}\n */\nexport const textureMatchesMeta = (texture, meta) => !!(\n    texture && texture.userData && Object.keys(meta).reduce((matches, key) => {\n      return matches && meta[key] === texture.userData[key];\n    }, true));\n\n/**\n * @param {EventTarget|EventDispatcher} target\n * @param {string} eventName\n * @param {?Function} predicate\n */\nexport const waitForEvent = (target, eventName, predicate = null) =>\n    new Promise(resolve => {\n      function handler(e) {\n        if (!predicate || predicate(e)) {\n          resolve(e);\n          target.removeEventListener(eventName, handler);\n        }\n      }\n      target.addEventListener(eventName, handler);\n    });\n\n\n/**\n * Dispatch a synthetic event on a given element with a given type, and\n * optionally with custom event properties. Returns the dispatched event.\n *\n * @param {HTMLElement} element\n * @param {type} string\n * @param {*} properties\n */\nexport const dispatchSyntheticEvent = (element, type, properties = {\n  clientX: 0,\n  clientY: 0,\n  deltaY: 1.0\n}) => {\n  const event = new CustomEvent(type, {cancelable: true});\n  Object.assign(event, properties);\n  element.dispatchEvent(event);\n  return event;\n};\n\n\nexport const ASSETS_DIRECTORY = '../examples/assets/';\n\n/**\n * Returns the full path for an asset by name. This is a convenience helper so\n * that we don't need to change paths throughout all test suites if we ever\n * decide to move files around.\n *\n * @param {string} name\n * @return {string}\n */\nexport const assetPath = (name) => `${ASSETS_DIRECTORY}${name}`;\n\n\n/**\n * Returns true if the given element is in the tree of the document of the\n * current frame.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nexport const isInDocumentTree = (element) => {\n  let root = element.getRootNode();\n\n  while (root !== element && root != null) {\n    if (root.nodeType === Node.DOCUMENT_NODE) {\n      return root === document;\n    }\n\n    root = root.host && root.host.getRootNode();\n  }\n\n  return false;\n};\n"]}