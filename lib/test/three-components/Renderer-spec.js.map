{"version":3,"file":"Renderer-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/Renderer-spec.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ModelViewerElementBase, {$canvas, $onResize} from '../../model-viewer-base.js';\nimport ModelScene from '../../three-components/ModelScene.js';\nimport Renderer from '../../three-components/Renderer.js';\n\nconst expect = chai.expect;\n\nsuite('Renderer', () => {\n  let element;\n  let scene;\n  let renderer = new Renderer();\n  let ModelViewerElement = class extends ModelViewerElementBase {\n    static get is() {\n      return 'model-viewer-renderer';\n    }\n  };\n  customElements.define('model-viewer-renderer', ModelViewerElement);\n\n  teardown(() => {\n    renderer.scenes.clear();\n  });\n\n  function createScene() {\n    const element = new ModelViewerElement();\n    const scene = new ModelScene({\n      element: element,\n      canvas: element[$canvas],\n      width: 200,\n      height: 100,\n      renderer,\n    });\n    scene.isVisible = true;\n\n    scene.renderCount = 0;\n    const drawImage = scene.context.drawImage;\n    scene.context.drawImage = (...args) => {\n      scene.renderCount++;\n      drawImage.call(scene.context, ...args);\n    };\n\n    return scene;\n  }\n\n  suite('render', () => {\n    test('renders only dirty scenes', async function() {\n      let scene1 = createScene();\n      let scene2 = createScene();\n      renderer.registerScene(scene1);\n      renderer.registerScene(scene2);\n\n      renderer.render(performance.now());\n      expect(scene1.renderCount).to.be.equal(0);\n      expect(scene2.renderCount).to.be.equal(0);\n      expect(renderer.scenesRendered).to.be.equal(0);\n\n      scene1.isDirty = true;\n      renderer.render(performance.now());\n      expect(scene1.renderCount).to.be.equal(1);\n      expect(scene2.renderCount).to.be.equal(0);\n      expect(renderer.scenesRendered).to.be.equal(1);\n    });\n\n    test('marks scenes no longer dirty after rendering', async function() {\n      let scene = createScene();\n      renderer.registerScene(scene);\n\n      scene.isDirty = true;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1);\n      expect(!scene.isDirty).to.be.ok;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1);\n      expect(!scene.isDirty).to.be.ok;\n    });\n\n    test('does not render scenes marked as !isVisible', async function() {\n      let scene = createScene();\n      let renderer = new Renderer();\n      renderer.registerScene(scene);\n\n      scene.isVisible = false;\n      scene.isDirty = true;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(0);\n      expect(scene.isDirty).to.be.ok;\n      expect(renderer.scenesRendered).to.be.equal(0);\n\n      scene.isVisible = true;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1);\n      expect(!scene.isDirty).to.be.ok;\n      expect(renderer.scenesRendered).to.be.equal(1);\n    });\n\n    suite('when resizing', () => {\n      let originalDpr;\n\n      setup(() => {\n        originalDpr = self.devicePixelRatio;\n      });\n\n      teardown(() => {\n        Object.defineProperty(self, 'devicePixelRatio', {value: originalDpr});\n      });\n\n      test('updates effective DPR', async () => {\n        const scene = createScene();\n        const {element} = scene;\n        const initialDpr = renderer.renderer.getPixelRatio();\n        const {width, height} = scene.getSize();\n\n        element[$onResize]({width, height});\n\n        Object.defineProperty(\n            self, 'devicePixelRatio', {value: initialDpr + 1});\n\n        await new Promise(resolve => requestAnimationFrame(resolve));\n\n        const newDpr = renderer.renderer.getPixelRatio();\n\n        expect(newDpr).to.be.equal(initialDpr + 1);\n      });\n    });\n  });\n});\n"]}